(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{116:function(e,t,n){e.exports=n(239)},117:function(e,t,n){e.exports=n(39)},2:function(e){e.exports={siteTitle:"shaneknows",description:"Let's talk code.",stylesheets:["https://unpkg.com/tachyons@4.7.4/css/tachyons.min.css"],topLinks:[{text:"Blog",href:"/"},{text:"Naifu",href:"https://shaneknows.github.io/Naifu"},{text:"React Demo",href:"https://shaneknows.github.io/ReactDemo"},{text:"Github",href:"https://github.com/shaneknows/"}],backgroundClass:"bg-dark-gray",copyright:"Shane Knowles",siteId:"",bodyContent:"",bodyHtml:"",dir:"content",base:"index.json",ext:".json",sourceBase:"index.md",sourceExt:".md"}},237:function(e,t,n){__NEXT_REGISTER_PAGE("/post",function(){return e.exports=n(238),{page:e.exports.default}})},238:function(e,t,n){"use strict";n.r(t);var s=n(116),a=n.n(s),o=n(0),r=n.n(o),i=n(117),l=n(42),c=(n(55),n(56),n(2));n(40);t.default=Object(i.withRouter)(function(e){var t={};return e.router.query&&e.router.query.fullUrl&&(t=n(244)("./content".concat(e.router.query.fullUrl,".json"))),r.a.createElement("div",{className:"jsx-1532778144"},r.a.createElement(a.a,{styleId:"1532778144",css:[".content a{color:#0365A5;-webkit-text-decoration:none;text-decoration:none;border-bottom:1px solid #DFDFDF;-webkit-transition:all 300ms ease;transition:all 300ms ease;}","a:hover,a:focus{border-bottom-color:currentColor;}","code{background-color:#EEE;line-height:1;border-radius:2px;padding:1px;}","code:not(.hljs){border:1px solid #DDD;}"]}),r.a.createElement(l.a,{siteTitle:"".concat(c.siteTitle," - ").concat(t.title),heroTitle:c.siteTitle,description:c.description,stylesheets:c.stylesheets,topLinks:c.topLinks,backgroundClass:c.backgroundClass,body:function(e){return r.a.createElement("div",{className:"content center mw9 pa3 pa4-ns"},r.a.createElement("h1",{className:"mt0 lh-title"},e.title),r.a.createElement("div",{dangerouslySetInnerHTML:{__html:e.bodyHtml}}))}(t),copyright:c.copyright,siteId:c.siteId}))})},239:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(t,n,s){return n&&e(t.prototype,n),s&&e(t,s),t}}();t.flush=function(){var e=i.cssRules();return i.flush(),e};var a,o=n(0),r=n(240);var i=new((a=r)&&a.__esModule?a:{default:a}).default,l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.prevProps={},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),s(t,[{key:"shouldComponentUpdate",value:function(e){return this.props.styleId!==e.styleId||String(this.props.dynamic)!==String(e.dynamic)}},{key:"componentWillUnmount",value:function(){i.remove(this.props)}},{key:"render",value:function(){return this.shouldComponentUpdate(this.prevProps)&&(this.prevProps.styleId&&i.remove(this.prevProps),i.add(this.props),this.prevProps=this.props),null}}],[{key:"dynamic",value:function(e){return e.map(function(e){var t=e[0],n=e[1];return i.computeId(t,n)}).join(" ")}}]),t}();t.default=l},240:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(t,n,s){return n&&e(t.prototype,n),s&&e(t,s),t}}(),a=r(n(241)),o=r(n(242));function r(e){return e&&e.__esModule?e:{default:e}}var i=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=t.styleSheet,s=void 0===n?null:n,a=t.optimizeForSpeed,r=void 0!==a&&a,i=t.isBrowser,l=void 0===i?"undefined"!=typeof window:i;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._sheet=s||new o.default({name:"styled-jsx",optimizeForSpeed:r}),this._sheet.inject(),s&&"boolean"==typeof r&&(this._sheet.setOptimizeForSpeed(r),this._optimizeForSpeed=this._sheet.isOptimizeForSpeed()),this._isBrowser=l,this._fromServer=void 0,this._indices={},this._instancesCounts={},this.computeId=this.createComputeId(),this.computeSelector=this.createComputeSelector()}return s(e,[{key:"add",value:function(e){var t=this;void 0===this._optimizeForSpeed&&(this._optimizeForSpeed=Array.isArray(e.css),this._sheet.setOptimizeForSpeed(this._optimizeForSpeed),this._optimizeForSpeed=this._sheet.isOptimizeForSpeed()),this._isBrowser&&!this._fromServer&&(this._fromServer=this.selectFromServer(),this._instancesCounts=Object.keys(this._fromServer).reduce(function(e,t){return e[t]=0,e},{}));var n=this.getIdAndRules(e),s=n.styleId,a=n.rules;if(s in this._instancesCounts)this._instancesCounts[s]+=1;else{var o=a.map(function(e){return t._sheet.insertRule(e)}).filter(function(e){return-1!==e});this._indices[s]=o,this._instancesCounts[s]=1}}},{key:"remove",value:function(e){var t=this,n=this.getIdAndRules(e).styleId;if(function(e,t){if(!e)throw new Error("StyleSheetRegistry: "+t+".")}(n in this._instancesCounts,"styleId: `"+n+"` not found"),this._instancesCounts[n]-=1,this._instancesCounts[n]<1){var s=this._fromServer&&this._fromServer[n];s?(s.parentNode.removeChild(s),delete this._fromServer[n]):(this._indices[n].forEach(function(e){return t._sheet.deleteRule(e)}),delete this._indices[n]),delete this._instancesCounts[n]}}},{key:"update",value:function(e,t){this.add(t),this.remove(e)}},{key:"flush",value:function(){this._sheet.flush(),this._sheet.inject(),this._fromServer=void 0,this._indices={},this._instancesCounts={},this.computeId=this.createComputeId(),this.computeSelector=this.createComputeSelector()}},{key:"cssRules",value:function(){var e=this,t=this._fromServer?Object.keys(this._fromServer).map(function(t){return[t,e._fromServer[t]]}):[],n=this._sheet.cssRules();return t.concat(Object.keys(this._indices).map(function(t){return[t,e._indices[t].map(function(e){return n[e].cssText}).join("\n")]}).filter(function(e){return Boolean(e[1])}))}},{key:"createComputeId",value:function(){var e={};return function(t,n){if(!n)return"jsx-"+t;var s=String(n),o=t+s;return e[o]||(e[o]="jsx-"+(0,a.default)(t+"-"+s)),e[o]}}},{key:"createComputeSelector",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:/__jsx-style-dynamic-selector/g,t={};return function(n,s){this._isBrowser||(s=s.replace(/\/style/gi,"\\/style"));var a=n+s;return t[a]||(t[a]=s.replace(e,n)),t[a]}}},{key:"getIdAndRules",value:function(e){var t=this;if(e.dynamic){var n=this.computeId(e.styleId,e.dynamic);return{styleId:n,rules:Array.isArray(e.css)?e.css.map(function(e){return t.computeSelector(n,e)}):[this.computeSelector(n,e.css)]}}return{styleId:this.computeId(e.styleId),rules:Array.isArray(e.css)?e.css:[e.css]}}},{key:"selectFromServer",value:function(){return Array.prototype.slice.call(document.querySelectorAll('[id^="__jsx-"]')).reduce(function(e,t){return e[t.id.slice(2)]=t,e},{})}}]),e}();t.default=i},241:function(e,t,n){"use strict";e.exports=function(e){for(var t=5381,n=e.length;n;)t=33*t^e.charCodeAt(--n);return t>>>0}},242:function(e,t,n){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(t,n,s){return n&&e(t.prototype,n),s&&e(t,s),t}}();var s=e.env&&!0,a=function(e){return"[object String]"===Object.prototype.toString.call(e)},o=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=t.name,o=void 0===n?"stylesheet":n,i=t.optimizeForSpeed,l=void 0===i?s:i,c=t.isBrowser,p=void 0===c?"undefined"!=typeof window:c;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r(a(o),"`name` must be a string"),this._name=o,this._deletedRulePlaceholder="#"+o+"-deleted-rule____{}",r("boolean"==typeof l,"`optimizeForSpeed` must be a boolean"),this._optimizeForSpeed=l,this._isBrowser=p,this._serverSheet=void 0,this._tags=[],this._injected=!1,this._rulesCount=0;var h=this._isBrowser&&document.querySelector('meta[property="csp-nonce"]');this._nonce=h?h.getAttribute("content"):null}return n(e,[{key:"setOptimizeForSpeed",value:function(e){r("boolean"==typeof e,"`setOptimizeForSpeed` accepts a boolean"),r(0===this._rulesCount,"optimizeForSpeed cannot be when rules have already been inserted"),this.flush(),this._optimizeForSpeed=e,this.inject()}},{key:"isOptimizeForSpeed",value:function(){return this._optimizeForSpeed}},{key:"inject",value:function(){var e=this;if(r(!this._injected,"sheet already injected"),this._injected=!0,this._isBrowser&&this._optimizeForSpeed)return this._tags[0]=this.makeStyleTag(this._name),this._optimizeForSpeed="insertRule"in this.getSheet(),void(this._optimizeForSpeed||(s||console.warn("StyleSheet: optimizeForSpeed mode not supported falling back to standard mode."),this.flush(),this._injected=!0));this._serverSheet={cssRules:[],insertRule:function(t,n){return"number"==typeof n?e._serverSheet.cssRules[n]={cssText:t}:e._serverSheet.cssRules.push({cssText:t}),n},deleteRule:function(t){e._serverSheet.cssRules[t]=null}}}},{key:"getSheetForTag",value:function(e){if(e.sheet)return e.sheet;for(var t=0;t<document.styleSheets.length;t++)if(document.styleSheets[t].ownerNode===e)return document.styleSheets[t]}},{key:"getSheet",value:function(){return this.getSheetForTag(this._tags[this._tags.length-1])}},{key:"insertRule",value:function(e,t){if(r(a(e),"`insertRule` accepts only strings"),!this._isBrowser)return"number"!=typeof t&&(t=this._serverSheet.cssRules.length),this._serverSheet.insertRule(e,t),this._rulesCount++;if(this._optimizeForSpeed){var n=this.getSheet();"number"!=typeof t&&(t=n.cssRules.length);try{n.insertRule(e,t)}catch(t){return s||console.warn("StyleSheet: illegal rule: \n\n"+e+"\n\nSee https://stackoverflow.com/q/20007992 for more info"),-1}}else{var o=this._tags[t];this._tags.push(this.makeStyleTag(this._name,e,o))}return this._rulesCount++}},{key:"replaceRule",value:function(e,t){if(this._optimizeForSpeed||!this._isBrowser){var n=this._isBrowser?this.getSheet():this._serverSheet;if(t.trim()||(t=this._deletedRulePlaceholder),!n.cssRules[e])return e;n.deleteRule(e);try{n.insertRule(t,e)}catch(a){s||console.warn("StyleSheet: illegal rule: \n\n"+t+"\n\nSee https://stackoverflow.com/q/20007992 for more info"),n.insertRule(this._deletedRulePlaceholder,e)}}else{var a=this._tags[e];r(a,"old rule at index `"+e+"` not found"),a.textContent=t}return e}},{key:"deleteRule",value:function(e){if(this._isBrowser)if(this._optimizeForSpeed)this.replaceRule(e,"");else{var t=this._tags[e];r(t,"rule at index `"+e+"` not found"),t.parentNode.removeChild(t),this._tags[e]=null}else this._serverSheet.deleteRule(e)}},{key:"flush",value:function(){this._injected=!1,this._rulesCount=0,this._isBrowser?(this._tags.forEach(function(e){return e&&e.parentNode.removeChild(e)}),this._tags=[]):this._serverSheet.cssRules=[]}},{key:"cssRules",value:function(){var e=this;return this._isBrowser?this._tags.reduce(function(t,n){return n?t=t.concat(e.getSheetForTag(n).cssRules.map(function(t){return t.cssText===e._deletedRulePlaceholder?null:t})):t.push(null),t},[]):this._serverSheet.cssRules}},{key:"makeStyleTag",value:function(e,t,n){t&&r(a(t),"makeStyleTag acceps only strings as second parameter");var s=document.createElement("style");this._nonce&&s.setAttribute("nonce",this._nonce),s.type="text/css",s.setAttribute("data-"+e,""),t&&s.appendChild(document.createTextNode(t));var o=document.head||document.getElementsByTagName("head")[0];return n?o.insertBefore(s,n):o.appendChild(s),s}},{key:"length",get:function(){return this._rulesCount}}]),e}();function r(e,t){if(!e)throw new Error("StyleSheet: "+t+".")}t.default=o}).call(this,n(243))},243:function(e,t){var n,s,a=e.exports={};function o(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function i(e){if(n===setTimeout)return setTimeout(e,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:o}catch(e){n=o}try{s="function"==typeof clearTimeout?clearTimeout:r}catch(e){s=r}}();var l,c=[],p=!1,h=-1;function u(){p&&l&&(p=!1,l.length?c=l.concat(c):h=-1,c.length&&d())}function d(){if(!p){var e=i(u);p=!0;for(var t=c.length;t;){for(l=c,c=[];++h<t;)l&&l[h].run();h=-1,t=c.length}l=null,p=!1,function(e){if(s===clearTimeout)return clearTimeout(e);if((s===r||!s)&&clearTimeout)return s=clearTimeout,clearTimeout(e);try{s(e)}catch(t){try{return s.call(null,e)}catch(t){return s.call(this,e)}}}(e)}}function g(e,t){this.fun=e,this.array=t}function m(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new g(e,t)),1!==c.length||p||i(d)},g.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=m,a.addListener=m,a.once=m,a.off=m,a.removeListener=m,a.removeAllListeners=m,a.emit=m,a.prependListener=m,a.prependOnceListener=m,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},244:function(e,t,n){var s={"./content/2014-6-3-Hello-Jekyll.json":245,"./content/2015-4-25-MatchUpTackr.json":246,"./content/2017-5-8-ReactUnityGithubPages.json":247,"./content/index.json":2,"./content/posts/2014-6-3-Hello-Jekyll.json":248,"./content/posts/2015-4-25-MatchUpTackr.json":249,"./content/posts/2017-5-8-ReactUnityGithubPages.json":250,"./content/summary.json":40};function a(e){var t=o(e);return n(t)}function o(e){var t=s[e];if(!(t+1)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return t}a.keys=function(){return Object.keys(s)},a.resolve=o,e.exports=a,a.id=244},245:function(e){e.exports={title:"Hello, Jekyll",date:"2014-06-03T00:00:00.000Z",bodyContent:"Hey there! I'm still working out learning all this Jekyll stuff, but I hope to get this blog up and running soon.\r\n\r\n### What's to come?\r\n\r\n* Exploration and evaluation of random projects on [GitHub](http://github.com)\r\n* An explanation of some of my own personal projects as I develop. Mostly games and web stuff such as [Naifu](https://github.com/shaneknows/Naifu)\r\n* Some interesting .NET tricks I discover through personal work\r\n* Other tips and tricks for any aspiring developer\r\n* Really anything code-centric",bodyHtml:'<p>Hey there! I\'m still working out learning all this Jekyll stuff, but I hope to get this blog up and running soon.</p>\n<h3>What\'s to come?</h3>\n<ul>\n<li>Exploration and evaluation of random projects on <a href="http://github.com">GitHub</a></li>\n<li>An explanation of some of my own personal projects as I develop. Mostly games and web stuff such as <a href="https://github.com/shaneknows/Naifu">Naifu</a></li>\n<li>Some interesting .NET tricks I discover through personal work</li>\n<li>Other tips and tricks for any aspiring developer</li>\n<li>Really anything code-centric</li>\n</ul>\n',preview:"Hey there! I'm still working out learning all this Jekyll stuff, but I hope to get this blog up and running",dir:"content",base:"2014-6-3-Hello-Jekyll.json",ext:".json",sourceBase:"2014-6-3-Hello-Jekyll.md",sourceExt:".md"}},246:function(e){e.exports={title:"MatchUpTrackr",date:"2015-04-25T00:00:00.000Z",bodyContent:"It has been quite some time. I'm starting a new mobile app to track match up statistics for any type of competitive game.\r\n\r\n### Wait. What? Why?\r\n\r\nFor a good bit of my life I have been playing video games. It basically got me interested in the things that brought me down my career path. \r\nLately I have been playing a lot of Super Smash Brothers for the Wii U semi-competitively. My friend showed me an excel file he was using to track his wins/ losses\r\nagainst certain characters. I have also heard of professional players keeping a log on their phones of specific match up tips for each character they play against or \r\neven match up strategies for specific players. So I thought, why not create a nice pretty app to track all of that? \r\n\r\nHere are my goals:\r\n\r\n* Use Apache Cordova to create an application that will run across most mobile platforms.\r\n* Allow users to break down entries by Game Name -> Player's Character -> Opponent's Character\r\n* At the Opponent's Character level, be able to simply add/subtract wins and losses.\r\n* Ability to select the Opponent's Character level and add notes that can be viewed later.\r\n\r\nRight now I have just created the basic Hello, World application you get when you install all of Apache Cordova extension. \r\n[You can check it out here](https://github.com/shaneknows/MatchUpTrackr)\r\n\r\nHopefully in a week or so I will have the XML reading and writing set up so there will be some actual functionality.\r\n\r\nUntil next time.",bodyHtml:"<p>It has been quite some time. I'm starting a new mobile app to track match up statistics for any type of competitive game.</p>\n<h3>Wait. What? Why?</h3>\n<p>For a good bit of my life I have been playing video games. It basically got me interested in the things that brought me down my career path.\nLately I have been playing a lot of Super Smash Brothers for the Wii U semi-competitively. My friend showed me an excel file he was using to track his wins/ losses\nagainst certain characters. I have also heard of professional players keeping a log on their phones of specific match up tips for each character they play against or\neven match up strategies for specific players. So I thought, why not create a nice pretty app to track all of that?</p>\n<p>Here are my goals:</p>\n<ul>\n<li>Use Apache Cordova to create an application that will run across most mobile platforms.</li>\n<li>Allow users to break down entries by Game Name -&gt; Player's Character -&gt; Opponent's Character</li>\n<li>At the Opponent's Character level, be able to simply add/subtract wins and losses.</li>\n<li>Ability to select the Opponent's Character level and add notes that can be viewed later.</li>\n</ul>\n<p>Right now I have just created the basic Hello, World application you get when you install all of Apache Cordova extension.\n<a href=\"https://github.com/shaneknows/MatchUpTrackr\">You can check it out here</a></p>\n<p>Hopefully in a week or so I will have the XML reading and writing set up so there will be some actual functionality.</p>\n<p>Until next time.</p>\n",preview:"It has been quite some time. I'm starting a new mobile app to track match up statistics for any type of",dir:"content",base:"2015-4-25-MatchUpTackr.json",ext:".json",sourceBase:"2015-4-25-MatchUpTackr.md",sourceExt:".md"}},247:function(e){e.exports={title:"React <3 Unity <3 Github Pages",date:"2017-05-08T00:00:00.000Z",bodyContent:'Recently I have been tinkering with React and really digging how easy it is to get up and running using the [Create React App](https://github.com/facebookincubator/create-react-app). What makes things even sweeter is how easily you can deploy to Github Pages to show off all of your work. I was able to even port my Unity game to a React app and deploy it to my site [here](https://shaneknows.github.io/Naifu)!\r\n\r\n### Alright you have my attention... how?\r\n\r\nWell first off download [Node.js](https://nodejs.org/en/download/) and install npm by opening up your command prompt (or use the terminal in Visual Studio Code) and running:\r\n```bash\r\nnpm install @npm -g\r\n```\r\nNow that you have npm installed. You will want to install the create-react-app npm package by running:\r\n```bash\r\nnpm install create-react-app -g\r\n```\r\nNavigate to the folder you wish to create your app and run:\r\n```bash\r\ncreate-react-app <name of project>\r\n```\r\nThis should take a little bit of time but by the time it finishes you will have a working react app you can toy around with. Make sure you switch to the working directory you just created and you can run the app\r\n```bash\r\ncd <your project name>\r\nnpm start\r\n```\r\n\r\n### Cool now how can I show this off?\r\n\r\nAssuming you have a [Github account](https://github.com/) it\'s quite easy. First create a repository for your current React application on Github. Now back in your project lets install github pages so we can generate and deploy the app as a static site for github pages.\r\n```bash\r\nnpm install --save-dev gh-pages\r\n```\r\nNow in your project\'s project.json we need to add a deploy option under the `scripts` section:\r\n```javascript\r\n"deploy":"npm run build&&gh-pages -d build"\r\n```\r\nThis will build our project and publish it to a `gh-pages` branch under your project.\r\n\r\nNow we are almost ready to deploy. First you will want to set your `homepage` in your project.json file. It should be updated and named `https://<username>.github.io/<projectname>`\r\n\r\nNow run \r\n```bash\r\nnpm run deploy\r\n``` \r\nto build and publish to the `gh-pages` branch of our repository. If there isn\'t a branch, it will be created. Now let\'s setup our project to enable GitHub Pages. Under the repository settings on Github, find the GitHub Pages section and set the `Source` to use the `gh-pages` branch via the dropdown list.\r\n\r\nNow again run\r\n```bash\r\nnpm run deploy\r\n```\r\nand you should be able to navigate to your homepage URL and find your working app!\r\n\r\n### Alright so now what about Unity?\r\n\r\nAlright so if you don\'t have a working Unity game feel free to fork mine [here](https://github.com/shaneknows/NaifuGame). Install the latest version of [Unity3d](https://unity3d.com/get-unity/download) and open the project. Select `File`->`Build and Run`. We want to build the project for WebGL so select that option and provide a Folder name. Once the process has complete you should see your game running in a web browser. If everything appears to be working fine, copy the files from the created folder and paste them in the `public` folder of your React application. This should override the default `index.html` file. Open up the `index.html` file and add `%PUBLIC_PATH%/` in front of the src tags so our file references will work locally and while deployed. Your file should look something like:\r\n```html\r\n<!DOCTYPE html>\r\n<html lang="en-us">\r\n  <head>\r\n    <meta charset="utf-8">\r\n    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">\r\n    <title>Unity WebGL Player | {game name}</title>\r\n    <link rel="shortcut icon" href="%PUBLIC_URL%/TemplateData/favicon.ico">\r\n    <link rel="stylesheet" href="%PUBLIC_URL%/TemplateData/style.css">\r\n    <script src="%PUBLIC_URL%/TemplateData/UnityProgress.js"><\/script>  \r\n    <script src="%PUBLIC_URL%/Build/UnityLoader.js"><\/script>\r\n    <script>\r\n      var gameInstance = UnityLoader.instantiate("gameContainer", "%PUBLIC_URL%/Build/<game name>.json", {onProgress: UnityProgress});\r\n    <\/script>\r\n  </head>\r\n  <body>\r\n    <div class="webgl-content">\r\n      <div id="gameContainer" style="width: 665px; height: 400px"></div>\r\n      <div class="footer">\r\n        <div class="webgl-logo"></div>\r\n        <div class="fullscreen" onclick="gameInstance.SetFullscreen(1)"></div>\r\n        <div class="title">{game name}</div>\r\n      </div>\r\n    </div>\r\n  </body>\r\n</html>\r\n```\r\n\r\nYou will also want to clear out the JSX (The HTML-like syntax found in the `render` function) rendered in the `App.js` file. Just return an empty div instead or you will get errors when running. You could also just completely comment out the `index.js` file if you don\'t intend on adding any react code. Now test your app by running `npm start`.\r\n\r\nIf everything seems to be working, run `npm run deploy` again and you should see your game running on your Github Pages site!\r\n\r\nHappy coding.',bodyHtml:'<p>Recently I have been tinkering with React and really digging how easy it is to get up and running using the <a href="https://github.com/facebookincubator/create-react-app">Create React App</a>. What makes things even sweeter is how easily you can deploy to Github Pages to show off all of your work. I was able to even port my Unity game to a React app and deploy it to my site <a href="https://shaneknows.github.io/Naifu">here</a>!</p>\n<h3>Alright you have my attention... how?</h3>\n<p>Well first off download <a href="https://nodejs.org/en/download/">Node.js</a> and install npm by opening up your command prompt (or use the terminal in Visual Studio Code) and running:</p>\n<pre><code class="hljs">npm install @npm -g</code></pre><p>Now that you have npm installed. You will want to install the create-react-app npm package by running:</p>\n<pre><code class="hljs">npm install create-react-app -g</code></pre><p>Navigate to the folder you wish to create your app and run:</p>\n<pre><code class="hljs">create-react-app &lt;name of project&gt;</code></pre><p>This should take a little bit of time but by the time it finishes you will have a working react app you can toy around with. Make sure you switch to the working directory you just created and you can run the app</p>\n<pre><code class="hljs"><span class="hljs-built_in">cd</span> &lt;your project name&gt;\nnpm start</code></pre><h3>Cool now how can I show this off?</h3>\n<p>Assuming you have a <a href="https://github.com/">Github account</a> it\'s quite easy. First create a repository for your current React application on Github. Now back in your project lets install github pages so we can generate and deploy the app as a static site for github pages.</p>\n<pre><code class="hljs">npm install --save-dev gh-pages</code></pre><p>Now in your project\'s project.json we need to add a deploy option under the <code>scripts</code> section:</p>\n<pre><code class="hljs"><span class="hljs-string">"deploy"</span>:<span class="hljs-string">"npm run build&amp;&amp;gh-pages -d build"</span></code></pre><p>This will build our project and publish it to a <code>gh-pages</code> branch under your project.</p>\n<p>Now we are almost ready to deploy. First you will want to set your <code>homepage</code> in your project.json file. It should be updated and named <code>https://&lt;username&gt;.github.io/&lt;projectname&gt;</code></p>\n<p>Now run</p>\n<pre><code class="hljs">npm run deploy</code></pre><p>to build and publish to the <code>gh-pages</code> branch of our repository. If there isn\'t a branch, it will be created. Now let\'s setup our project to enable GitHub Pages. Under the repository settings on Github, find the GitHub Pages section and set the <code>Source</code> to use the <code>gh-pages</code> branch via the dropdown list.</p>\n<p>Now again run</p>\n<pre><code class="hljs">npm run deploy</code></pre><p>and you should be able to navigate to your homepage URL and find your working app!</p>\n<h3>Alright so now what about Unity?</h3>\n<p>Alright so if you don\'t have a working Unity game feel free to fork mine <a href="https://github.com/shaneknows/NaifuGame">here</a>. Install the latest version of <a href="https://unity3d.com/get-unity/download">Unity3d</a> and open the project. Select <code>File</code>-&gt;<code>Build and Run</code>. We want to build the project for WebGL so select that option and provide a Folder name. Once the process has complete you should see your game running in a web browser. If everything appears to be working fine, copy the files from the created folder and paste them in the <code>public</code> folder of your React application. This should override the default <code>index.html</code> file. Open up the <code>index.html</code> file and add <code>%PUBLIC_PATH%/</code> in front of the src tags so our file references will work locally and while deployed. Your file should look something like:</p>\n<pre><code class="hljs"><span class="hljs-meta">&lt;!DOCTYPE html&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en-us"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"utf-8"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">"Content-Type"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"text/html; charset=utf-8"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Unity WebGL Player | {game name}<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"shortcut icon"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"%PUBLIC_URL%/TemplateData/favicon.ico"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"%PUBLIC_URL%/TemplateData/style.css"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"%PUBLIC_URL%/TemplateData/UnityProgress.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>  \n    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"%PUBLIC_URL%/Build/UnityLoader.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="actionscript">\n      <span class="hljs-keyword">var</span> gameInstance = UnityLoader.instantiate(<span class="hljs-string">"gameContainer"</span>, <span class="hljs-string">"%PUBLIC_URL%/Build/&lt;game name&gt;.json"</span>, {onProgress: UnityProgress});\n    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"webgl-content"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"gameContainer"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width: 665px; height: 400px"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"footer"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"webgl-logo"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"fullscreen"</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">"gameInstance.SetFullscreen(1)"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"title"</span>&gt;</span>{game name}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre><p>You will also want to clear out the JSX (The HTML-like syntax found in the <code>render</code> function) rendered in the <code>App.js</code> file. Just return an empty div instead or you will get errors when running. You could also just completely comment out the <code>index.js</code> file if you don\'t intend on adding any react code. Now test your app by running <code>npm start</code>.</p>\n<p>If everything seems to be working, run <code>npm run deploy</code> again and you should see your game running on your Github Pages site!</p>\n<p>Happy coding.</p>\n',preview:"Recently I have been tinkering with React and really digging how easy it is to get up and running using the",dir:"content",base:"2017-5-8-ReactUnityGithubPages.json",ext:".json",sourceBase:"2017-5-8-ReactUnityGithubPages.md",sourceExt:".md"}},248:function(e){e.exports={title:"Hello, Jekyll",date:"2014-06-03T00:00:00.000Z",bodyContent:"Hey there! I'm still working out learning all this Jekyll stuff, but I hope to get this blog up and running soon.\r\n\r\n### What's to come?\r\n\r\n* Exploration and evaluation of random projects on [GitHub](http://github.com)\r\n* An explanation of some of my own personal projects as I develop. Mostly games and web stuff such as [Naifu](https://github.com/shaneknows/Naifu)\r\n* Some interesting .NET tricks I discover through personal work\r\n* Other tips and tricks for any aspiring developer\r\n* Really anything code-centric",bodyHtml:'<p>Hey there! I\'m still working out learning all this Jekyll stuff, but I hope to get this blog up and running soon.</p>\n<h3>What\'s to come?</h3>\n<ul>\n<li>Exploration and evaluation of random projects on <a href="http://github.com">GitHub</a></li>\n<li>An explanation of some of my own personal projects as I develop. Mostly games and web stuff such as <a href="https://github.com/shaneknows/Naifu">Naifu</a></li>\n<li>Some interesting .NET tricks I discover through personal work</li>\n<li>Other tips and tricks for any aspiring developer</li>\n<li>Really anything code-centric</li>\n</ul>\n',preview:"Hey there! I'm still working out learning all this Jekyll stuff, but I hope to get this blog up and running",dir:"content/posts",base:"2014-6-3-Hello-Jekyll.json",ext:".json",sourceBase:"2014-6-3-Hello-Jekyll.md",sourceExt:".md"}},249:function(e){e.exports={title:"MatchUpTrackr",date:"2015-04-25T00:00:00.000Z",bodyContent:"It has been quite some time. I'm starting a new mobile app to track match up statistics for any type of competitive game.\r\n\r\n### Wait. What? Why?\r\n\r\nFor a good bit of my life I have been playing video games. It basically got me interested in the things that brought me down my career path. \r\nLately I have been playing a lot of Super Smash Brothers for the Wii U semi-competitively. My friend showed me an excel file he was using to track his wins/ losses\r\nagainst certain characters. I have also heard of professional players keeping a log on their phones of specific match up tips for each character they play against or \r\neven match up strategies for specific players. So I thought, why not create a nice pretty app to track all of that? \r\n\r\nHere are my goals:\r\n\r\n* Use Apache Cordova to create an application that will run across most mobile platforms.\r\n* Allow users to break down entries by Game Name -> Player's Character -> Opponent's Character\r\n* At the Opponent's Character level, be able to simply add/subtract wins and losses.\r\n* Ability to select the Opponent's Character level and add notes that can be viewed later.\r\n\r\nRight now I have just created the basic Hello, World application you get when you install all of Apache Cordova extension. \r\n[You can check it out here](https://github.com/shaneknows/MatchUpTrackr)\r\n\r\nHopefully in a week or so I will have the XML reading and writing set up so there will be some actual functionality.\r\n\r\nUntil next time.",bodyHtml:"<p>It has been quite some time. I'm starting a new mobile app to track match up statistics for any type of competitive game.</p>\n<h3>Wait. What? Why?</h3>\n<p>For a good bit of my life I have been playing video games. It basically got me interested in the things that brought me down my career path.\nLately I have been playing a lot of Super Smash Brothers for the Wii U semi-competitively. My friend showed me an excel file he was using to track his wins/ losses\nagainst certain characters. I have also heard of professional players keeping a log on their phones of specific match up tips for each character they play against or\neven match up strategies for specific players. So I thought, why not create a nice pretty app to track all of that?</p>\n<p>Here are my goals:</p>\n<ul>\n<li>Use Apache Cordova to create an application that will run across most mobile platforms.</li>\n<li>Allow users to break down entries by Game Name -&gt; Player's Character -&gt; Opponent's Character</li>\n<li>At the Opponent's Character level, be able to simply add/subtract wins and losses.</li>\n<li>Ability to select the Opponent's Character level and add notes that can be viewed later.</li>\n</ul>\n<p>Right now I have just created the basic Hello, World application you get when you install all of Apache Cordova extension.\n<a href=\"https://github.com/shaneknows/MatchUpTrackr\">You can check it out here</a></p>\n<p>Hopefully in a week or so I will have the XML reading and writing set up so there will be some actual functionality.</p>\n<p>Until next time.</p>\n",preview:"It has been quite some time. I'm starting a new mobile app to track match up statistics for any type of",dir:"content/posts",base:"2015-4-25-MatchUpTackr.json",ext:".json",sourceBase:"2015-4-25-MatchUpTackr.md",sourceExt:".md"}},250:function(e){e.exports={title:"React <3 Unity <3 Github Pages",date:"2017-05-08T00:00:00.000Z",bodyContent:'Recently I have been tinkering with React and really digging how easy it is to get up and running using the [Create React App](https://github.com/facebookincubator/create-react-app). What makes things even sweeter is how easily you can deploy to Github Pages to show off all of your work. I was able to even port my Unity game to a React app and deploy it to my site [here](https://shaneknows.github.io/Naifu)!\r\n\r\n### Alright you have my attention... how?\r\n\r\nWell first off download [Node.js](https://nodejs.org/en/download/) and install npm by opening up your command prompt (or use the terminal in Visual Studio Code) and running:\r\n```bash\r\nnpm install @npm -g\r\n```\r\nNow that you have npm installed. You will want to install the create-react-app npm package by running:\r\n```bash\r\nnpm install create-react-app -g\r\n```\r\nNavigate to the folder you wish to create your app and run:\r\n```bash\r\ncreate-react-app <name of project>\r\n```\r\nThis should take a little bit of time but by the time it finishes you will have a working react app you can toy around with. Make sure you switch to the working directory you just created and you can run the app\r\n```bash\r\ncd <your project name>\r\nnpm start\r\n```\r\n\r\n### Cool now how can I show this off?\r\n\r\nAssuming you have a [Github account](https://github.com/) it\'s quite easy. First create a repository for your current React application on Github. Now back in your project lets install github pages so we can generate and deploy the app as a static site for github pages.\r\n```bash\r\nnpm install --save-dev gh-pages\r\n```\r\nNow in your project\'s project.json we need to add a deploy option under the `scripts` section:\r\n```javascript\r\n"deploy":"npm run build&&gh-pages -d build"\r\n```\r\nThis will build our project and publish it to a `gh-pages` branch under your project.\r\n\r\nNow we are almost ready to deploy. First you will want to set your `homepage` in your project.json file. It should be updated and named `https://<username>.github.io/<projectname>`\r\n\r\nNow run \r\n```bash\r\nnpm run deploy\r\n``` \r\nto build and publish to the `gh-pages` branch of our repository. If there isn\'t a branch, it will be created. Now let\'s setup our project to enable GitHub Pages. Under the repository settings on Github, find the GitHub Pages section and set the `Source` to use the `gh-pages` branch via the dropdown list.\r\n\r\nNow again run\r\n```bash\r\nnpm run deploy\r\n```\r\nand you should be able to navigate to your homepage URL and find your working app!\r\n\r\n### Alright so now what about Unity?\r\n\r\nAlright so if you don\'t have a working Unity game feel free to fork mine [here](https://github.com/shaneknows/NaifuGame). Install the latest version of [Unity3d](https://unity3d.com/get-unity/download) and open the project. Select `File`->`Build and Run`. We want to build the project for WebGL so select that option and provide a Folder name. Once the process has complete you should see your game running in a web browser. If everything appears to be working fine, copy the files from the created folder and paste them in the `public` folder of your React application. This should override the default `index.html` file. Open up the `index.html` file and add `%PUBLIC_PATH%/` in front of the src tags so our file references will work locally and while deployed. Your file should look something like:\r\n```html\r\n<!DOCTYPE html>\r\n<html lang="en-us">\r\n  <head>\r\n    <meta charset="utf-8">\r\n    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">\r\n    <title>Unity WebGL Player | {game name}</title>\r\n    <link rel="shortcut icon" href="%PUBLIC_URL%/TemplateData/favicon.ico">\r\n    <link rel="stylesheet" href="%PUBLIC_URL%/TemplateData/style.css">\r\n    <script src="%PUBLIC_URL%/TemplateData/UnityProgress.js"><\/script>  \r\n    <script src="%PUBLIC_URL%/Build/UnityLoader.js"><\/script>\r\n    <script>\r\n      var gameInstance = UnityLoader.instantiate("gameContainer", "%PUBLIC_URL%/Build/<game name>.json", {onProgress: UnityProgress});\r\n    <\/script>\r\n  </head>\r\n  <body>\r\n    <div class="webgl-content">\r\n      <div id="gameContainer" style="width: 665px; height: 400px"></div>\r\n      <div class="footer">\r\n        <div class="webgl-logo"></div>\r\n        <div class="fullscreen" onclick="gameInstance.SetFullscreen(1)"></div>\r\n        <div class="title">{game name}</div>\r\n      </div>\r\n    </div>\r\n  </body>\r\n</html>\r\n```\r\n\r\nYou will also want to clear out the JSX (The HTML-like syntax found in the `render` function) rendered in the `App.js` file. Just return an empty div instead or you will get errors when running. You could also just completely comment out the `index.js` file if you don\'t intend on adding any react code. Now test your app by running `npm start`.\r\n\r\nIf everything seems to be working, run `npm run deploy` again and you should see your game running on your Github Pages site!\r\n\r\nHappy coding.',bodyHtml:'<p>Recently I have been tinkering with React and really digging how easy it is to get up and running using the <a href="https://github.com/facebookincubator/create-react-app">Create React App</a>. What makes things even sweeter is how easily you can deploy to Github Pages to show off all of your work. I was able to even port my Unity game to a React app and deploy it to my site <a href="https://shaneknows.github.io/Naifu">here</a>!</p>\n<h3>Alright you have my attention... how?</h3>\n<p>Well first off download <a href="https://nodejs.org/en/download/">Node.js</a> and install npm by opening up your command prompt (or use the terminal in Visual Studio Code) and running:</p>\n<pre><code class="hljs">npm install @npm -g</code></pre><p>Now that you have npm installed. You will want to install the create-react-app npm package by running:</p>\n<pre><code class="hljs">npm install create-react-app -g</code></pre><p>Navigate to the folder you wish to create your app and run:</p>\n<pre><code class="hljs">create-react-app &lt;name of project&gt;</code></pre><p>This should take a little bit of time but by the time it finishes you will have a working react app you can toy around with. Make sure you switch to the working directory you just created and you can run the app</p>\n<pre><code class="hljs"><span class="hljs-built_in">cd</span> &lt;your project name&gt;\nnpm start</code></pre><h3>Cool now how can I show this off?</h3>\n<p>Assuming you have a <a href="https://github.com/">Github account</a> it\'s quite easy. First create a repository for your current React application on Github. Now back in your project lets install github pages so we can generate and deploy the app as a static site for github pages.</p>\n<pre><code class="hljs">npm install --save-dev gh-pages</code></pre><p>Now in your project\'s project.json we need to add a deploy option under the <code>scripts</code> section:</p>\n<pre><code class="hljs"><span class="hljs-string">"deploy"</span>:<span class="hljs-string">"npm run build&amp;&amp;gh-pages -d build"</span></code></pre><p>This will build our project and publish it to a <code>gh-pages</code> branch under your project.</p>\n<p>Now we are almost ready to deploy. First you will want to set your <code>homepage</code> in your project.json file. It should be updated and named <code>https://&lt;username&gt;.github.io/&lt;projectname&gt;</code></p>\n<p>Now run</p>\n<pre><code class="hljs">npm run deploy</code></pre><p>to build and publish to the <code>gh-pages</code> branch of our repository. If there isn\'t a branch, it will be created. Now let\'s setup our project to enable GitHub Pages. Under the repository settings on Github, find the GitHub Pages section and set the <code>Source</code> to use the <code>gh-pages</code> branch via the dropdown list.</p>\n<p>Now again run</p>\n<pre><code class="hljs">npm run deploy</code></pre><p>and you should be able to navigate to your homepage URL and find your working app!</p>\n<h3>Alright so now what about Unity?</h3>\n<p>Alright so if you don\'t have a working Unity game feel free to fork mine <a href="https://github.com/shaneknows/NaifuGame">here</a>. Install the latest version of <a href="https://unity3d.com/get-unity/download">Unity3d</a> and open the project. Select <code>File</code>-&gt;<code>Build and Run</code>. We want to build the project for WebGL so select that option and provide a Folder name. Once the process has complete you should see your game running in a web browser. If everything appears to be working fine, copy the files from the created folder and paste them in the <code>public</code> folder of your React application. This should override the default <code>index.html</code> file. Open up the <code>index.html</code> file and add <code>%PUBLIC_PATH%/</code> in front of the src tags so our file references will work locally and while deployed. Your file should look something like:</p>\n<pre><code class="hljs"><span class="hljs-meta">&lt;!DOCTYPE html&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en-us"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"utf-8"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">"Content-Type"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"text/html; charset=utf-8"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Unity WebGL Player | {game name}<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"shortcut icon"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"%PUBLIC_URL%/TemplateData/favicon.ico"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"%PUBLIC_URL%/TemplateData/style.css"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"%PUBLIC_URL%/TemplateData/UnityProgress.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>  \n    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"%PUBLIC_URL%/Build/UnityLoader.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="actionscript">\n      <span class="hljs-keyword">var</span> gameInstance = UnityLoader.instantiate(<span class="hljs-string">"gameContainer"</span>, <span class="hljs-string">"%PUBLIC_URL%/Build/&lt;game name&gt;.json"</span>, {onProgress: UnityProgress});\n    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"webgl-content"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"gameContainer"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width: 665px; height: 400px"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"footer"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"webgl-logo"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"fullscreen"</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">"gameInstance.SetFullscreen(1)"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"title"</span>&gt;</span>{game name}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre><p>You will also want to clear out the JSX (The HTML-like syntax found in the <code>render</code> function) rendered in the <code>App.js</code> file. Just return an empty div instead or you will get errors when running. You could also just completely comment out the <code>index.js</code> file if you don\'t intend on adding any react code. Now test your app by running <code>npm start</code>.</p>\n<p>If everything seems to be working, run <code>npm run deploy</code> again and you should see your game running on your Github Pages site!</p>\n<p>Happy coding.</p>\n',preview:"Recently I have been tinkering with React and really digging how easy it is to get up and running using the",dir:"content/posts",base:"2017-5-8-ReactUnityGithubPages.json",ext:".json",sourceBase:"2017-5-8-ReactUnityGithubPages.md",sourceExt:".md"}},40:function(e){e.exports={fileMap:{"content/index.json":{siteTitle:"shaneknows",description:"Let's talk code.",stylesheets:["https://unpkg.com/tachyons@4.7.4/css/tachyons.min.css"],topLinks:[{text:"Blog",href:"/"},{text:"Naifu",href:"https://shaneknows.github.io/Naifu"},{text:"React Demo",href:"https://shaneknows.github.io/ReactDemo"},{text:"Github",href:"https://github.com/shaneknows/"}],backgroundClass:"bg-dark-gray",copyright:"Shane Knowles",siteId:"",dir:"content",base:"index.json",ext:".json",sourceBase:"index.md",sourceExt:".md"},"content/posts/2017-5-8-ReactUnityGithubPages.json":{title:"React <3 Unity <3 Github Pages",date:"2017-05-08T00:00:00.000Z",preview:"Recently I have been tinkering with React and really digging how easy it is to get up and running using the",dir:"content/posts",base:"2017-5-8-ReactUnityGithubPages.json",ext:".json",sourceBase:"2017-5-8-ReactUnityGithubPages.md",sourceExt:".md"},"content/posts/2014-6-3-Hello-Jekyll.json":{title:"Hello, Jekyll",date:"2014-06-03T00:00:00.000Z",preview:"Hey there! I'm still working out learning all this Jekyll stuff, but I hope to get this blog up and running",dir:"content/posts",base:"2014-6-3-Hello-Jekyll.json",ext:".json",sourceBase:"2014-6-3-Hello-Jekyll.md",sourceExt:".md"},"content/posts/2015-4-25-MatchUpTackr.json":{title:"MatchUpTrackr",date:"2015-04-25T00:00:00.000Z",preview:"It has been quite some time. I'm starting a new mobile app to track match up statistics for any type of",dir:"content/posts",base:"2015-4-25-MatchUpTackr.json",ext:".json",sourceBase:"2015-4-25-MatchUpTackr.md",sourceExt:".md"}},sourceFileArray:["content/index.md","content/posts/2014-6-3-Hello-Jekyll.md","content/posts/2015-4-25-MatchUpTackr.md","content/posts/2017-5-8-ReactUnityGithubPages.md"]}},41:function(e,t,n){e.exports=n(82)},42:function(e,t,n){"use strict";var s=n(0),a=n.n(s),o=(n(4),n(41)),r=n.n(o);var i=function(e){return a.a.createElement(r.a,null,a.a.createElement("title",null,e.siteTitle),a.a.createElement("meta",{name:"description",content:e.description}),a.a.createElement("meta",{name:"viewport",content:"width=device-width, initial-scale=1"}),e.stylesheets&&e.stylesheets.length>0&&e.stylesheets.map(function(e,t){return a.a.createElement("link",{key:t,rel:"stylesheet",href:e})}),a.a.createElement("style",null,"\n          body {\n            font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;\n          }\n      "))},l=n(11),c=n.n(l);function p(e){return a.a.createElement("div",{className:"relative tc ".concat(e.backgroundClass)},a.a.createElement("div",{className:"mw7 center white pv4"},a.a.createElement("div",{className:"pv4"},a.a.createElement("h1",{className:"f1 normal lh-title ma0 pa0"},a.a.createElement(c.a,{prefetch:!0,href:"/"},a.a.createElement("a",{className:"white no-underline",href:"/"},e.heroTitle))),a.a.createElement("h4",{className:"normal o-70 ma0 pt2 pb3 ph1"},e.subtitle),a.a.createElement("div",null,e.topLinks&&e.topLinks.length>0&&e.topLinks.map(function(e,t){return a.a.createElement(c.a,{href:e.href,key:t},a.a.createElement("a",{className:"dib f6 white no-underline pa1 ma1",key:t},e.text))})))))}p.defaultProps={backgroundClass:"bg-mid-gray",topLinks:[],heroTitle:"",subtitle:""};var h=p;var u=function(e){var t=new Date;return a.a.createElement("footer",{className:"center w5 f6 tc mt4"},a.a.createElement("p",null,a.a.createElement("span",null,"© "),a.a.createElement("span",null,t.getFullYear()," "),a.a.createElement("span",null,e.copyright)))};var d=function(e){return a.a.createElement("div",null,a.a.createElement("script",{dangerouslySetInnerHTML:{__html:(t=e.siteId,"\n  (function(b,o,i,l,e,r){b.GoogleAnalyticsObject=l;b[l]||(b[l]=\n  function(){(b[l].q=b[l].q||[]).push(arguments)});b[l].l=+new Date;\n  e=o.createElement(i);r=o.getElementsByTagName(i)[0];\n  e.src='https://www.google-analytics.com/analytics.js';\n  r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));\n  ga('create','".concat(t,"','auto');ga('send','pageview');\n"))}}));var t};function g(e){return a.a.createElement("div",null,a.a.createElement(i,{siteTitle:e.siteTitle,description:e.description,stylesheets:e.stylesheets}),a.a.createElement("main",{className:"lh-copy"},a.a.createElement(h,{heroTitle:e.heroTitle,subtitle:e.description,topLinks:e.topLinks,backgroundClass:e.backgroundClass}),e.body,a.a.createElement(u,{copyright:e.copyright}),e.siteId&&a.a.createElement(d,{siteId:e.siteId})))}g.defaultProps={heroTitle:"",description:"",stylesheets:["https://unpkg.com/tachyons@4.7.0/css/tachyons.min.css"],backgroundClass:"bg-dark-gray"};t.a=g},55:function(e,t,n){"use strict";var s=n(0),a=n.n(s),o=(n(4),n(11)),r=n.n(o);function i(e){return a.a.createElement(r.a,{href:"post?fullUrl=".concat(e.href),as:e.href},a.a.createElement("a",{className:"b black o-80 glow no-underline lh-solid ".concat(e.className)},e.children))}t.a=function(e){return a.a.createElement("div",{className:"mb4 pb2 bb b--light-gray"},a.a.createElement(i,{href:e.href,className:"f3"},e.title),e.preview&&a.a.createElement("p",{className:"mv1 o-60"},e.preview,a.a.createElement(i,{href:e.href},a.a.createElement("span",null," »"))),e.date&&a.a.createElement("small",{className:"db ttu o-40"},a.a.createElement("time",{key:new Date(e.date).toISOString()},e.date)))}},56:function(e,t,n){"use strict";function s(e){return new Date(e).toUTCString().split(" ").slice(1,4).join(" ")}n.d(t,"a",function(){return s})}},[[237,1,0]]]);